name: Verifier releaser

on:
  # For manual tests.
  workflow_dispatch:
  push:
    tags:
      - "*" # triggers only if push new tag version, like `0.8.4`.
  # Run daily as a dry-run/test.
  schedule:
    - cron: "0 1 * * *"

permissions: read-all

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ISSUE_REPOSITORY: slsa-framework/slsa-verifier

jobs:
  # Generate ldflags dynamically.
  args:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.ldflags.outputs.version }}
    steps:
      - id: checkout
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          fetch-depth: 0
      - id: ldflags
        run: |
          echo "::set-output name=version::$(git describe --tags --always --dirty | cut -c2-)"

  # Based on https://github.com/google/osv-scanner/blob/124ad0e2311dc8f25cec2aa298e467a7fffef3b1/.github/workflows/goreleaser.yml#L11-L53
  goreleaser:
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    permissions:
      contents: write  # for goreleaser/goreleaser-action to create a GitHub release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version: 1.18
      - name: Run GoReleaser
        id: run-goreleaser
        uses: goreleaser/goreleaser-action@8f67e590f2d095516493f017008adc464e63adb1 # v4.1.0
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate subject
        id: hash
        env:
          ARTIFACTS: "${{ steps.run-goreleaser.outputs.artifacts }}"
        run: |
          set -euo pipefail
          checksum_file=$(echo "$ARTIFACTS" | jq -r '.[] | select (.type=="Checksum") | .path')
          echo "hashes=$(cat $checksum_file | base64 -w0)" >> "$GITHUB_OUTPUT"

  provenance:
    needs: [goreleaser]
    permissions:
      actions: read # To read the workflow path.
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.4.0
    with:
      base64-subjects: "${{ needs.goreleaser.outputs.hashes }}"
      upload-assets: true # upload to a new release

  # In case this fails, e.g. build configuration changes, file an issue in slsa-verifier
  if-failed:
    runs-on: ubuntu-latest
    needs: [provenance]
    if: always() && needs.provenance.result == 'failure'
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
        with:
          repository: slsa-framework/example-package
      - run: |
          set -euo pipefail

          ./.github/workflows/scripts/e2e-report-failure.sh
